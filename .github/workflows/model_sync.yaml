name: Sync Ollama Model to GHCR

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Nome do modelo (ex: deepseek-r1)'
        required: true
      model_tag:
        description: 'Tag do modelo (ex: 7b, 671b)'
        required: true
      force_resync:
        description: 'Forçar ressincronização mesmo se já existir'
        required: false
        type: boolean
        default: false

jobs:
  sync-model:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set Variables
        run: |
          echo "MODEL_NAME=${{ github.event.inputs.model_name }}" >> $GITHUB_ENV
          echo "MODEL_TAG=${{ github.event.inputs.model_tag }}"   >> $GITHUB_ENV
          echo "FORCE=${{ github.event.inputs.force_resync }}"    >> $GITHUB_ENV
          echo "UPSTREAM=registry.ollama.ai/library/${MODEL_NAME}:${MODEL_TAG}" >> $GITHUB_ENV
          echo "TARGET=ghcr.io/${{ github.repository_owner }}/public/${MODEL_NAME}:${MODEL_TAG}" >> $GITHUB_ENV

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Check if Image Exists
        id: check
        continue-on-error: true
        run: |
          if [[ "${FORCE}" != "true" ]]; then
            docker manifest inspect "${TARGET}" >/dev/null 2>&1 \
              && echo "EXISTS=true" >> $GITHUB_ENV \
              && echo "Pulando: já existe em ${TARGET}" \
              || echo "EXISTS=false" >> $GITHUB_ENV
          else
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Pull, Tag & Push
        if: env.EXISTS == 'false'
        run: |
          docker pull "${UPSTREAM}"
          docker tag  "${UPSTREAM}" "${TARGET}"
          docker push "${TARGET}"

      - name: Resultado
        run: |
          if [[ "${EXISTS}" == "true" ]]; then
            echo "✅ Nada para fazer: ${TARGET} já existe."
          else
            echo "✅ Publicado: ${TARGET}"
            echo "Use: ollama pull ${TARGET}"
          fi
